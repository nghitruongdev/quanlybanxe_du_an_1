/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ultramotor.ui;

import com.swingx.CloseButton;
import com.ultramotor.component.table.ModelAction;
import com.ultramotor.component.table.ModelEvent;
import com.ultramotor.dao.DongSanPhamDAO;
import com.ultramotor.dao.LoaiHangDAO;
import com.ultramotor.dao.NhaSanXuatDAO;
import com.ultramotor.dao.SanPhamDAO;
import com.ultramotor.entity.DongSanPham;
import com.ultramotor.entity.LoaiHang;
import com.ultramotor.entity.NhaSanXuat;
import com.ultramotor.entity.SanPham;
import com.ultramotor.ui.sanPham.DongSanPhamPanel;
import com.ultramotor.ui.sanPham.LoaiHangJPanel;
import com.ultramotor.ui.sanPham.NhaSanXuatPanel;
import com.ultramotor.ui.sanPham.SanPhamPanel;
import com.ultramotor.util.MsgBox;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author thaian
 */
public class NewJFrame extends javax.swing.JFrame {

    private LoaiHangJPanel pnlLH;
    private NhaSanXuatPanel pnlNSX;
    private DongSanPhamPanel pnlDSP;
    private SanPhamPanel pnlSP;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlThongKe_SP = new javax.swing.JPanel();
        lblLoaiHang = new javax.swing.JLabel();
        lblNSX = new javax.swing.JLabel();
        lblDongSP = new javax.swing.JLabel();
        lblSanPham = new javax.swing.JLabel();
        btn_AddSP = new javax.swing.JButton();
        btn_AddLH = new com.swingx.Button();
        btn_AddNSX = new com.swingx.Button();
        btn_AddDSP = new com.swingx.Button();
        txtSearchSP = new com.swingx.SearchTextField();
        txtSearchLH = new com.swingx.SearchTextField();
        txtSearchNSX = new com.swingx.SearchTextField();
        txtSearchDongSP = new com.swingx.SearchTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoaiHang = new com.ultramotor.component.table.Table();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNSX = new com.ultramotor.component.table.Table();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSP = new com.ultramotor.component.table.Table();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblDongSP = new com.ultramotor.component.table.Table();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlThongKe_SP.setBackground(new java.awt.Color(255, 255, 255));

        lblLoaiHang.setText("Loại hàng");

        lblNSX.setText("Nhà sản xuất");

        lblDongSP.setText("Dòng sản phẩm");

        lblSanPham.setText("Sản phẩm");

        btn_AddSP.setText("Tạo mới");

        btn_AddLH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/plus.png"))); // NOI18N
        btn_AddLH.setText("Add");
        btn_AddLH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddLHActionPerformed(evt);
            }
        });

        btn_AddNSX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/plus.png"))); // NOI18N
        btn_AddNSX.setText("Add");
        btn_AddNSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddNSXActionPerformed(evt);
            }
        });

        btn_AddDSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/plus.png"))); // NOI18N
        btn_AddDSP.setText("Add");
        btn_AddDSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddDSPActionPerformed(evt);
            }
        });

        txtSearchLH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchLHKeyReleased(evt);
            }
        });

        txtSearchNSX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchNSXKeyReleased(evt);
            }
        });

        txtSearchDongSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchDongSPKeyReleased(evt);
            }
        });

        tblLoaiHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id_LH", "Tên LH", "actions"
            }
        ));
        jScrollPane1.setViewportView(tblLoaiHang);

        tblNSX.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id_NSX", "Tên NSX", "Actions"
            }
        ));
        jScrollPane3.setViewportView(tblNSX);

        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "SKU", "Tên SP", "Màu Sắc", "Phân Khối", "Đời xe", "Thời gian BH", "Địa chỉ SX", "Giá Tiền", "Mô tả", "Hình", "Id_DSP", "Id_NV", "Action"
            }
        ));
        jScrollPane4.setViewportView(tblSP);

        tblDongSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id_DSP", "Tên Dòng", "ID_LH", "ID_NSX", "Actions"
            }
        ));
        jScrollPane6.setViewportView(tblDongSP);

        javax.swing.GroupLayout pnlThongKe_SPLayout = new javax.swing.GroupLayout(pnlThongKe_SP);
        pnlThongKe_SP.setLayout(pnlThongKe_SPLayout);
        pnlThongKe_SPLayout.setHorizontalGroup(
            pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                        .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblSanPham)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearchSP, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btn_AddSP))
                            .addComponent(jScrollPane4))
                        .addContainerGap())
                    .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                        .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                                .addComponent(lblLoaiHang, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchLH, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_AddLH, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                                .addComponent(lblNSX)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearchNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_AddNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDongSP)
                                .addGap(25, 25, 25)
                                .addComponent(txtSearchDongSP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_AddDSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlThongKe_SPLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))))
        );
        pnlThongKe_SPLayout.setVerticalGroup(
            pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongKe_SPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNSX)
                        .addComponent(txtSearchNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchLH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLoaiHang)
                        .addComponent(txtSearchDongSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDongSP, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_AddLH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_AddNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_AddDSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlThongKe_SPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSanPham)
                    .addComponent(txtSearchSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_AddSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThongKe_SP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThongKe_SP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1151, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddLHActionPerformed

    }//GEN-LAST:event_btn_AddLHActionPerformed

    private void btn_AddNSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddNSXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddNSXActionPerformed

    private void btn_AddDSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddDSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddDSPActionPerformed

    private void txtSearchLHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchLHKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchLHKeyReleased

    private void txtSearchNSXKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNSXKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNSXKeyReleased

    private void txtSearchDongSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchDongSPKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchDongSPKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.swingx.Button btn_AddDSP;
    private com.swingx.Button btn_AddLH;
    private com.swingx.Button btn_AddNSX;
    private javax.swing.JButton btn_AddSP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblDongSP;
    private javax.swing.JLabel lblLoaiHang;
    private javax.swing.JLabel lblNSX;
    private javax.swing.JLabel lblSanPham;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlThongKe_SP;
    private com.ultramotor.component.table.Table tblDongSP;
    private com.ultramotor.component.table.Table tblLoaiHang;
    private com.ultramotor.component.table.Table tblNSX;
    private com.ultramotor.component.table.Table tblSP;
    private com.swingx.SearchTextField txtSearchDongSP;
    private com.swingx.SearchTextField txtSearchLH;
    private com.swingx.SearchTextField txtSearchNSX;
    private com.swingx.SearchTextField txtSearchSP;
    // End of variables declaration//GEN-END:variables
LoaiHangDAO dao_LH = new LoaiHangDAO();
    DongSanPhamDAO dao_DongSP = new DongSanPhamDAO();
    NhaSanXuatDAO dao_NSX = new NhaSanXuatDAO();
    SanPhamDAO dao_SP = new SanPhamDAO();
    int row = -1; //vị trí hàng được chọn trên table
    ModelEvent event_Lh;
    ModelEvent event_nsx;
    ModelEvent event_DSP;
    ModelEvent event_SP;
    private DefaultTableModel model_LH;

    void init() {
        pnlLH = new LoaiHangJPanel();
        pnlNSX = new NhaSanXuatPanel();
        pnlSP = new SanPhamPanel();
        pnlDSP = new DongSanPhamPanel();

        // thêm nút cập nhật và xoá cho bảng pnlLoaiHang
        event_Lh = new ModelEvent<LoaiHang>() {
            @Override
            public void update(LoaiHang lh) {
                pnlLH.setForm_LH(lh);

                showPanel("LoaiHang");
            }

            @Override
            public void delete(LoaiHang lh) {
                deleteLH(lh.getIdLH());
            }

        };
        // thêm nút cập nhật và xoá cho bảng pnlNSX
        event_nsx = new ModelEvent<NhaSanXuat>() {
            @Override
            public void update(NhaSanXuat nsx) {
                pnlNSX.setForm_NSX(nsx);
                showPanel("NSX");
            }

            @Override
            public void delete(NhaSanXuat nsx) {
                deleteNSX(nsx.getIdNSX());
            }

        };
        // thêm nút cập nhật và xoá cho bảng pnlDSP
        event_DSP = new ModelEvent<DongSanPham>() {
            @Override
            public void update(DongSanPham dsp) {
                pnlDSP.setForm_DSP(dsp);
                showPanel("DSP");
                pnlDSP.fillComboLoaiHang();
                pnlDSP.fillComboNSX();
            }

            @Override
            public void delete(DongSanPham dsp) {
                deleteDSP(dsp.getIdDongSP());
            }

        };
//        // thêm nút cập nhật và xoá cho bảng pnlSP
        event_SP = new ModelEvent<SanPham>() {
            @Override
            public void update(SanPham sp) {
                pnlSP.setForm_SP(sp);
                showPanel("SP");
                pnlSP.fillComboSP();
            }

            @Override
            public void delete(SanPham sp) {
                deleteSP(sp.getSku());
            }

        };
        this.fillTable("LoaiHang");
        this.fillTable("NSX");
        this.fillTable("DSP");
        this.fillTable("SP");
        addTxtListeners();
        addListeners();

    }

    // Xoá LH
    private void deleteLH(String id_LH) {
        if (MsgBox.confirm("Bạn thực sự muốn xóa Loại hàng này?", false) == 0) {
            int index = getIndexLoaiHang(id_LH);
            dao_LH.delete(id_LH);
            fillTable("LoaiHang");
            
        }
        
    }

    // Xoá NSX
    private void deleteNSX(String id_NSX) {
        if (MsgBox.confirm("Bạn thực sự muốn xóa Nhà sản xuất này?", false) == 0) {
            int index = getIndexNSX(id_NSX);
            dao_NSX.delete(id_NSX);
            fillTable("NSX");
        }

    }

    // Xoá DSP
    private void deleteDSP(String id_DongSP) {
        if (MsgBox.confirm("Bạn thực sự muốn xóa dòng sản phẩm này?", false) == 0) {
            int index = getIndexDSP(id_DongSP);
            dao_DongSP.delete(id_DongSP);
            fillTable("DSP");
        }
    }

    // Xoá SP
    private void deleteSP(String SKU) {
        if (MsgBox.confirm("Bạn thực sự muốn xóa dòng sản phẩm này?", false) == 0) {
            int index = getIndexSP(SKU);
            dao_SP.delete(SKU);
            fillTable("SP");
        }
    }
    // lấy thông tin LoaiHang

    private Object[] getInfo(LoaiHang lh) {
        System.out.println(event_Lh);
        return new Object[]{
            lh.getIdLH(), lh.getTenLoaiHang(),
            new ModelAction(lh, event_Lh)
        };
    }

    private Object[] getInfo(NhaSanXuat nsx) {
        return new Object[]{
            nsx.getIdNSX(), nsx.getTenNSX(),
            new ModelAction(nsx, event_nsx)
        };
    }

    private Object[] getInfo(DongSanPham dsp) {
        return new Object[]{
            dsp.getIdDongSP(), dsp.getTenDongSP(), dsp.getIdLH(), dsp.getIdNSX(),
            new ModelAction(dsp, event_DSP)
        };
    }

    private Object[] getInfo(SanPham sp) {
        return new Object[]{
            sp.getSku(),
            sp.getTenSP(),
            sp.getMauSac(),
            sp.getPhanKhoi(),
            sp.getDoiXe(),
            sp.getThoiGianBH(),
            sp.getDiaChiSX(),
            sp.getGiaTien(),
            sp.getMoTa(),
            sp.getHinh(),
            sp.getIdDongSP(),
            sp.getIdNV(),
            new ModelAction(sp, event_SP)
        };
    }

    private JDialog getDialog(JPanel panel) {
        JDialog dialog = new JDialog();
        dialog.setUndecorated(true);
        dialog.setBackground(new Color(255, 255, 255, 0));
        JPanel con = new JPanel() {
            @Override
            public void paint(Graphics grphcs) {
                Graphics2D g2 = (Graphics2D) grphcs;
                g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.8f));
                g2.setColor(getBackground());
                g2.fillRoundRect(0, 0, this.getWidth(), this.getHeight(), 5, 5);
                g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));
                super.paint(grphcs);
            }
        };

        con.setOpaque(false);
        con.setBackground(new Color(250, 250, 250));
        con.setLayout(new MigLayout("inset 5 20 20 5", "[center]", "[20!][fill, center, grow]"));
        con.add(new CloseButton(), "al right, wrap");
        con.add(panel, "pushy, center, gapright 15");
//        dialog.setBounds(this.getWidth() / 2, this.getHeight(), this.getWidth() / 4, 0);

        dialog.setSize(this.getWidth() / 2, this.getHeight());
        dialog.getContentPane().add(con);
        dialog.pack();

        dialog.setLocation(this.getWidth() / 4, (this.getHeight() - dialog.getHeight()) / 2);
        dialog.setLocationRelativeTo(this);
        return dialog;
    }

    public void fillTable(String name) {
        switch (name) {
            case "LoaiHang":
                // fillTable Loai Hang
                DefaultTableModel model_LH = (DefaultTableModel) tblLoaiHang.getModel();
                model_LH.setRowCount(0);
                try {
                    String keyWord = txtSearchLH.getText();
                    List<LoaiHang> list = dao_LH.selectByKeyword(keyWord);
                    for (LoaiHang lh : list) {
                        model_LH.addRow(getInfo(lh));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    MsgBox.inform("Lỗi truy vấn dữ liệu!");
                }
                break;
            case "NSX":
                // fill table nha san xuat
                DefaultTableModel model_NSX = (DefaultTableModel) tblNSX.getModel();
                model_NSX.setRowCount(0);
                try {
                    String keyWord = txtSearchNSX.getText();
                    List<NhaSanXuat> list = dao_NSX.selectByKeyword(keyWord);
                    for (NhaSanXuat nsx : list) {
                        model_NSX.addRow(getInfo(nsx));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    MsgBox.inform("Lỗi truy vấn dữ liệu!");
                }
                break;
            case "DSP":
                // fill table dong san pham
                DefaultTableModel model_DSP = (DefaultTableModel) tblDongSP.getModel();
                model_DSP.setRowCount(0);
                try {
                    String keyWord = txtSearchDongSP.getText();
                    List<DongSanPham> list = dao_DongSP.selectByKeyword(keyWord);
                    for (DongSanPham dsp : list) {
                        model_DSP.addRow(getInfo(dsp));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    MsgBox.inform("Lỗi truy vấn dữ liệu!");
                }
                break;
            case "SP":
                // fill table san pham
                DefaultTableModel model_SP = (DefaultTableModel) tblSP.getModel();
                model_SP.setRowCount(0);
                try {
                    String keyWord = txtSearchSP.getText();
                    List<SanPham> list = dao_SP.selectByKeyword(keyWord);
                    for (SanPham sp : list) {
                        model_SP.addRow(getInfo(sp));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    MsgBox.inform("Lỗi truy vấn dữ liệu!");
                }
        }

    }

    public void showPanel(String name) {
        new Thread(() -> {
            try {
                Thread.sleep(100);
                JDialog dialog = null;
                switch (name) {
                    case "LoaiHang":
                        dialog = getDialog(pnlLH);
                        break;
                    case "NSX":
                        dialog = getDialog(pnlNSX);
                        break;
                    case "DSP":
                        dialog = getDialog(pnlDSP);
                        break;
                    case "SP":
                        dialog = getDialog(pnlSP);
                        break;
                }
                dialog.setVisible(true);
            } catch (InterruptedException e) {
            }
        }).start();
    }

    // thêm listeners cho các textfield
    private void addTxtListeners() {
        txtSearchLH.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //code xử lý keyReleased ở đây.
                fillTable("LoaiHang");
            }
        });
        txtSearchNSX.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //code xử lý keyReleased ở đây.
                fillTable("NSX");
            }
        });
        txtSearchDongSP.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //code xử lý keyReleased ở đây.
                fillTable("DSP");
            }
        });

        txtSearchSP.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                //code xử lý keyReleased ở đây.
                fillTable("SP");
            }
        });
    }

    // thêm mới listeners cho button
    private void addListeners() {

        btn_AddLH.addActionListener((ActionEvent e) -> {
            pnlLH.setForm_LH(null);
            showPanel("LoaiHang");
        });

        btn_AddNSX.addActionListener((ActionEvent e) -> {
            pnlNSX.setForm_NSX(null);
            showPanel("NSX");
        });

        btn_AddDSP.addActionListener((ActionEvent e) -> {
            pnlDSP.setForm_DSP(null);
            showPanel("DSP");
            pnlDSP.fillComboLoaiHang();
            pnlDSP.fillComboNSX();
        });

        btn_AddSP.addActionListener((ActionEvent e) -> {
            pnlSP.setForm_SP(null);
            showPanel("SP");
            pnlSP.fillComboSP();
        });
        // Loại Hàng
        pnlLH.setADDLH_Listener((ActionEvent e) -> {
            LoaiHang nv = pnlLH.getForm_LH();

            dao_LH.insert(nv);
            this.fillTable("LoaiHang");
            pnlLH.clearForm_LH();
//            MsgBox.inform("Thêm mới thành công!");

        });
        pnlLH.setUpdateLH_Listener((ActionEvent e) -> {
            LoaiHang nv = pnlLH.getForm_LH();

            dao_LH.update(nv);
            this.fillTable("LoaiHang");
            pnlLH.clearForm_LH();
//            MsgBox.inform("Thêm mới thành công!");

        });
        // Nhà Sản Xuất
        pnlNSX.setAddNSX_Listener((ActionEvent e) -> {
            NhaSanXuat nsx = pnlNSX.getForm_NSX();

            dao_NSX.insert(nsx);
            this.fillTable("NSX");
            pnlNSX.clearForm_NSX();
//            MsgBox.inform("Thêm mới thành công!");

        });
        pnlNSX.setUpdateNSX_Listener((ActionEvent e) -> {
            NhaSanXuat nsx = pnlNSX.getForm_NSX();

            dao_NSX.update(nsx);
            this.fillTable("NSX");
            pnlNSX.clearForm_NSX();
//            MsgBox.inform("Cập nhật thành công thành công!");

        });

        // Dòng Sản Phẩm
        pnlDSP.setAddDSP_Listener((ActionEvent e) -> {
            DongSanPham dsp = pnlDSP.getForm_DSP();

            dao_DongSP.insert(dsp);
            this.fillTable("DSP");
            pnlDSP.clearForm_DSP();
//            MsgBox.inform("Thêm mới thành công!");

        });
        pnlDSP.setUpdateDSP_Listener((ActionEvent e) -> {
            DongSanPham dsp = pnlDSP.getForm_DSP();

            dao_DongSP.update(dsp);
            this.fillTable("DSP");
            pnlDSP.clearForm_DSP();
//            MsgBox.inform("Cập nhật thành công thành công!");

        });

        // Sản Phẩm
        pnlSP.setAddSP_Listener((ActionEvent e) -> {
            SanPham sp = pnlSP.getForm_SP();

            dao_SP.insert(sp);
            this.fillTable("SP");
            pnlSP.clearForm_SP();
//            MsgBox.inform("Thêm mới thành công!");

        });
        pnlSP.setUpdateSP_Listener((ActionEvent e) -> {
            SanPham sp = pnlSP.getForm_SP();

            dao_SP.update(sp);
            this.fillTable("SP");
            pnlSP.clearForm_SP();
//            MsgBox.inform("Cập nhật thành công thành công!");

        });
    }

    private int getIndexLoaiHang(String id_LH) {
        for (int i = 0 ; i < tblLoaiHang.getRowCount(); i++) {
            if (tblLoaiHang.getValueAt(i, 1).toString().equalsIgnoreCase(id_LH)) {
                return i;
            }
        }
        return 0;
    }

    private int getIndexNSX(String id_NSX) {
        for (int i = 0; i < tblNSX.getRowCount(); i++) {
            if (tblNSX.getValueAt(i, 1).toString().equalsIgnoreCase(id_NSX)) {
                return i;
            }
        }
        return -1;
    }

    private int getIndexDSP(String id_DongSP) {
        for (int i = 0; i < tblDongSP.getRowCount(); i++) {
            if (tblDongSP.getValueAt(i, 1).toString().equalsIgnoreCase(id_DongSP)) {
                return i;
            }
        }
        return -1;
    }

    private int getIndexSP(String SKU) {
        for (int i = 0; i < tblSP.getRowCount(); i++) {
            if (tblSP.getValueAt(i, 1).toString().equalsIgnoreCase(SKU)) {
                return i;
            }
        }
        return -1;
    }

}
